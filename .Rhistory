utils:::menuInstallPkgs()
q()
install.packages("KernSmooth")
load("KernSmooth")
load(KernSmooth)
load(KernSmooth())
library(KernSmooth)
q()
q()
?assig
?assign
install.packages("swirl")
library(swirl)
swirl()
Sys.setenv(http_proxy="http://proxy.ibab.ac.in:3128")
Sys.getenv(http_proxy)
Sys.getenv("http_proxy"")
""
Sys.getenv("http_proxy")
swirl()
install_from_swirl("R Programming")
getwd()
install_course_zip("~/Downloads/swirl_courses-master.zip", multi=TRUE)
install_course_zip("~/../Downloads/swirl_courses-master.zip", multi=TRUE)
swirl()
5 + 7
x <- 5 + 7
x
y <- x - 3
y
z <- c(1.1, 9, 3.14)
?c
z
c(z, 555, z)
z * 2 + 100
my_sqrt <- sqrt(z-1)
my_sqrt
my_div < z / my_sqrt
my_div <- z / my_sqrt
my_div
c(1,2,3,4) + c(0,10)
c(1,2,3,4) + c(0,10,100)
z * 2 + 1000
my_div
getwd()
ls()
x <- 9
play()
ls()
nxt()
dir()
?list.files
arg(list.files)
args(list.files)
old.dir <- getwd()
mkdir("testdir")
?dir.create
dir.create(file.path(getwd(),"testdir"))
dir.create("testdir")
setwd("./testdir")
setwd("testdir")
getwd()
setwd(old.dir)
setwd("testdir")
file.create("mytest.R")
dir()
list.files()
dir(getwd())
info()
file.exists("mytest.R")
file.info("mytest.R")
file.rename("mytest.R",mytest2.R)
file.rename("mytest.R",mytest2.R"")
file.rename("mytest.R",mytest2.R")
""
file.rename("mytest.R","mytest2.R")
file.copy("mytest.R","mytest3.R")
file.copy("mytest2.R","mytest3.R")
file.path("mytest3.R")
play()
dir.create("a","b",recursive=TRUE)
dir()
setwd("a")
dir()
setwd("..")
getwd()
file.delete("a")
dir.delete("a")
dir.remove("a")
unlink("a")
dir()
rm("a")
unlink("a", recursive=TRUE)
dir()
dir.create("a/b",recursive=TRUE)
dir()
setwd("a")
dir()
file.info("b")
unlink("b")
dir()
unlink("b",recursive=TRUE)
dir()
setwd("..")
dir()
unlink("a",recursive=TRUE)
dir.create("a/b")
dir()
nxt()
dir.create("testdir2/testdir3", recursive=TRUE)
unlink("testdir2",recursive=TRUE)
setwd(old.dir)
unlink("testdir",recursive=TRUE)
1:20
pi:10
15:1
?`:`
seq(1,20)
seq(0,10, by=0.5)
my_seq <- seq(5,10, length=30)
length(my_seq)
seq(1:length(my_seq))
1:length(my_seq)
seq(along.with = my_seq)
play()
?seq
along.with(my_seq)
nxt()
seq_along(my_seq)
rep(0,40)
rep(0, times=40)
play()
rep(c(1,2,3),10)
nxt()
rep(c(1,2,3), times=10)
rep(c(0,1,2), times=10)
rep(c(0,1,2), each=10)
num_vect <- c(0.5, 55, -10, 6)
play()
nxt()
tf <- num_vect > 1
tf <- num_vect < 1
tf
new <-num_vect >- 6
new <- num_vect >= 6
num_vect >= 6
my_char <- c("My", "name", "is")
my_char
paste(my_char, collapse = " ")
my_name <- c(my_char, "sthiyaga")
my_name
paste(mychar, collapse = " ")
paste(my_char, collapse = " ")
paste(my_name, collapse = " ")
paste("Hello", "world!", sep = " ")
paste(c(1,2,3), c("X","Y","Z"), sep = "")
paste(1:3, c("X","Y","Z"), sep = "")
paste(LETTERS, 1:4, sep = "-")
x < c(44, NA, 5, NA)
x <- c(44, NA, 5, NA)
x * 3
y <- rnorm(1000)
z < rep(NA, 1000)
z <- rep(NA, 1000)
my_data <- sample(c(y,z), 100)
my_na <- is.na(my_data)
my_na
my_data ==NA
sum(my_na)
my_data
0/0
inf-inf
Inf - Inf
x
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!isna(x) & x > 0]
x[!is.na(x) & x > 0]
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2,-10)]
x[-c(2,10)]
vect <- c(foo = 11, bar = 2, norf = NA)
vect
names(vect)
vect <- c(11,2,NA)
vect <- c(11, 2, NA)
vect2 <- c(11, 2, NA)
names(vect2) <- c("foo", "bar", "norf")
identical(vect, vect2)
vect["bar"]
vect[c("foo", "bar")]
my_vector <- c(1:20)
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix
my_matrix2 <- matrix(1:20,4,5)
identical(my_matrix, my_matrix2)
patients <- c("Bill", "Gina","Kelly","Sean")
cbind(patients,my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
cnames <- c("patient", "age", "weight","bp","rating","test")
colnames(my_data) <- cnames
my_data
bye()
quit()
aset <- c("aa", "bb", "cc", "aa", "dd", "ee", "cc", "dd")
factor(aser)
factor(aset)
unique(aset)
fac1 <- factor(aset)
fac1
aset <- c("aa", "cc", "aa", "dd", "ee", "cc", "dd", "ab", "bb" , "aa")
fac1 <- factor(aset)
fac1
unique(aset)
as.numeric(fac1)
order(aset)
sort(aset)
aset
fac1
as.numeric(fac1)
!as.numeric(fac1)
as.numeric(fac1)
fac1
fac2 <- c(fac1, "gg")
fac2
aset
fact2 <- factor(aset, levels = c( "aa", "cc", "dd"), ordered=TRUE)
fact2
as.numeric(fac2)
file <- "<a href http://www.rcsb.org/pdb/files/3CUO.pdb/">
http://www.rcsb.org/pdb/files/3CUO.pdb</a>
file <- "<a href http://www.rcsb.org/pdb/files/3CUO.pdb">
http://www.rcsb.org/pdb/files/3CUO.pdb
file <- http://www.rcsb.org/pdb/files/3CUO.pdb
file <- http://www.rcsb.org/pdb/files/3CUO.pdb
?scan
scan("http://www.rcsb.org/pdb/files/3CUO.pdb")
scan(file = "http://www.rcsb.org/pdb/files/3CUO.pdb")
scan(url = "http://www.rcsb.org/pdb/files/3CUO.pdb")
file <- url("3CUO.pdb", open="http://www.rcsb.org/pdb/files/3CUO.pdb")
file <- url("http://www.rcsb.org/pdb/files/3CUO.pdb")
file
open(file)
?open
x <-read.table(file)
point <- c(2,1,3)
?sin
xmat
xmat <- c(1,0,0,0,cos(x),sin(x),0,sin(-x),cosx)
x <- 60
xmat <- c(1,0,0,0,cos(x),sin(x),0,sin(-x),cosx)
xmat <- c(1,0,0,0,cos(x),sin(x),0,sin(-x),cos(x))
rotmat
rotmat <- matrix(3,3,xmat)
rotmat
?matrix
rotmat <- matrix(xmat, 3,3)
rotmat
cos(60)
x <- pi/3
rotmat
rotmat <- matrix(xmat, 3,3)
rotmat
x
cos(x)
xmat <- c(1,0,0,0,cos(x),sin(x),0,sin(-x),cos(x))
rotmat <- matrix(xmat, 3,3)
rotmat
c
pint
point
coord <- matrix(point)
coord
rotmat * coord
?matrix>mult
?matrix.multiply
rotmat %% coord
dim(rotmat)
dim(coord)
coord %% rotmat
rotmat %% point
install.packages("httr")
install.packages(""httpuv"")
install.packages("httpuv")
install.packages("quantmod")
library(quantmod)
amzn = getSymbols("AMZN",auto.assign=FALSE)
sampleTimes = index(amzn)
head(sampleTimes)
library("lubridate")
install.packages("lubridate")
library("lubridate")
q5 <- ymd(sampleTimes)
q5
format(q5, "%Y")
match("2012" in format(q5, "%Y"))
match("2012", format(q5, "%Y"))
match("2012" %in% format(q5, "%Y"))
?match
"2012" %in% format(q5, "%Y")
q5a <- format(q5, "%Y")
head(q5a)
q5a=="2012"
q5[q5a=="2012"]
length(q5[q5a=="2012"])
length(q5[q5=="2012"])
length(q5[year =="2012"])
head(q5)
q5[format %Y]
format(q5, "%Y")
q5[format(q5, "%Y") == 2012]
wday(q5[format(q5, "%Y") == 2012], label = TRUE)
q5a <- wday(q5[format(q5, "%Y") == 2012], label = TRUE)
length(q5a[q5a=="Mon"])
library("lubridate")
today()
today() - 28
d1 = "mar102015"
d1
d1=date(d1)
date()
??lubridate
tomorrow()
today() + 1
today() - 1
today() - 28
library(ggplot2)
data(movies)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
ggplot(movies, aes(votes, rating))
?ggplot2
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
library(swirl)
swirl()
install.packages(knitr)
install.packages("knitr")
install.packages("htmltools")
install.packages("caTools")
install.packages("rmarkdown")
source('~/.active-rstudio-document', echo=TRUE)
options(rpubs.upload.method = "internal")
options(rpubs.upload.method = "curl")
file.edit('~/.Rprofile')
x  = 100
ln(x) / ln(10)
log(x)
log(x)/log(10)
log(125) / log(10)
as.character(x)
setwd("D:/acad/coursera/Reproducible_Research/assn/RepData_PeerAssessment1")
source('D:/acad/coursera/Reproducible_Research/assn/RepData_PeerAssessment1/asn1.R')
library(knitr)
knit2html("Assignment_1.Rmd")
class(d5$Sum)
d1 <- read.csv("activity.csv")
d1$date <- as.Date(d1$date,"%Y-%m-%d")
#Q1
d3 <- group_by(d1, date)
d5 <- summarize(d3, sum(steps, na.rm=TRUE), mean(steps, na.rm=TRUE))
names(d5) <- c("Date", "Sum", "Mean")
hist(d5$Sum, xlab="", main="")
title(main="Total number of Steps", xlab="Number of Steps")
print("Mean steps per day")
mean(d5$Sum, na.rm=TRUE)
print ("Median steps per day")
median(d5$Sum, na.rm=TRUE)
d2 <- d1
d2$interval <- as.POSIXct(sprintf("%04d",d2$interval), format="%H%M")
d4 <- group_by(d2,interval)
d6 <- summarize(d4,sum(steps, na.rm=TRUE),mean(steps, na.rm=TRUE))
names(d6) <- c("Interval", "Sum", "Mean")
plot(d6$Interval, d6$Mean, type="l", main="",xlab="",ylab="Mean Steps", xaxt="n")
title(main="Mean number of steps across hours of a day", xlab="Time interval (hrs)")
axis.POSIXct(side=1, at=window(d6$Interval,deltat=12), format="%H")
print("Interval with maximum steps is ")
max_interval <- d6[d6$Sum==max(d6$Sum),]$Interval
head(d5)
d5 <- summarize(d1,sum(steps, na.rm=TRUE),mean(steps, na.rm=TRUE))
head(d5)
d1$date <- as.Date(d1$date,"%Y-%m-%d")
d3 <- group_by(d1, date)
d5 <- summarize(d1,sum(steps, na.rm=TRUE),mean(steps, na.rm=TRUE))
?as.Date
d1$date
head(d1)
rm(d5)
head(d3)
d1 <- read.csv("activity.csv")
d1$date <- as.POSIXct(d1$date,"%Y-%m-%d")
?as.POSIXct
d1$date <- as.POSIXct(d1$date,tz= "", "%Y-%m-%d")
d3 <- group_by(d1, date)
class(d1$date)
head(d1$date)
d1 <- read.csv("activity.csv")
t <- as.POSIXct(strptime(d1$date) ,tz= "", "%Y-%m-%d")
t <- as.POSIXct(strptime(d1$date, "%Y-%m-%d"))
t
d1$date <- as.POSIXct(strptime(d1$date, "%Y-%m-%d"))
d3 <- group_by(d1, date)
?mean
d5 <- summarize(d1,sum(steps, na.rm=TRUE),mean(steps, na.rm=TRUE))
head(d1)
head(d3)
t
head(t)
head(d1)
d1$date <- as.POSIXct(strptime(d1$date, "%Y-%m-%d"))
class(d1$date)
d3 <- group_by(d1, date)
d5 <- summarize(d1,sum(steps, na.rm=TRUE),mean(steps, na.rm=TRUE))
